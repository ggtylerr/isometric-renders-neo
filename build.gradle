//file:noinspection GradlePackageVersionRange
plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_base_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url "https://maven.wispforest.io/releases/" }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.su5ed.dev/releases" }
    maven { url "https://maven.neoforged.net/releases/" }
    maven { url "https://maven.ggtyler.dev/releases/" }
}

loom {
    accessWidenerPath = file("src/main/resources/isometricrenders.accesswidener")
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        it.mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        it.mappings "dev.architectury:yarn-mappings-patch-neoforge:1.21+build.4"
    }
    modImplementation "org.sinytra.forgified-fabric-api:forgified-fabric-api:${project.fabric_version}"

    neoForge "net.neoforged:neoforge:${project.neoforge_version}"

    modImplementation "io.wispforest:worldmesher-neo:${project.worldmesher_version}"
    include "io.wispforest:worldmesher-neo:${project.worldmesher_version}"

    modImplementation "io.wispforest:owo-lib-neoforge:${project.owo_version}"
    forgeRuntimeLibrary(include(api("io.wispforest:endec:0.1.8")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:netty:0.1.4")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:gson:0.1.5")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:jankson:0.1.5")))
    forgeRuntimeLibrary(include(api("blue.endless:jankson:1.2.2")))
//    include "io.wispforest:owo-sentinel:${project.owo_version}"

    implementation 'org.java-websocket:Java-WebSocket:1.5.7'
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}
